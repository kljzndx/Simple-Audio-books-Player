// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleAudioBooksPlayer.DAL;

namespace SimpleAudioBooksPlayer.DAL.Migrations
{
    [DbContext(typeof(FilesContext))]
    [Migration("20190806082915_AddTable_SubtitleIndex")]
    partial class AddTable_SubtitleIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.ClassItem", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BackgroundColor");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.HasKey("Index");

                    b.ToTable("ClassList");
                });

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.FileGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("FolderPath");

                    b.Property<bool>("HasCover");

                    b.Property<string>("Name");

                    b.HasKey("Index");

                    b.ToTable("FileGroups");
                });

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.MusicFile", b =>
                {
                    b.Property<string>("FilePath")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DbVersion");

                    b.Property<TimeSpan>("Duration");

                    b.Property<string>("FileName");

                    b.Property<int>("GroupId");

                    b.Property<DateTime>("ModifyTime");

                    b.Property<string>("ParentFolderName");

                    b.Property<string>("ParentFolderPath");

                    b.Property<string>("Title");

                    b.Property<uint>("TrackNumber");

                    b.HasKey("FilePath");

                    b.ToTable("MusicFiles");
                });

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.PlaybackRecord", b =>
                {
                    b.Property<int>("GroupId");

                    b.Property<string>("CurrentTitle");

                    b.Property<bool>("IsReverse");

                    b.Property<DateTime>("PlayDate");

                    b.Property<TimeSpan>("PlayedTime");

                    b.Property<string>("SortMethod");

                    b.Property<uint>("TrackId");

                    b.HasKey("GroupId");

                    b.ToTable("PlaybackRecords");
                });

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.SubtitleFile", b =>
                {
                    b.Property<string>("FilePath")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DbVersion");

                    b.Property<string>("FileName");

                    b.Property<int>("GroupId");

                    b.Property<DateTime>("ModifyTime");

                    b.Property<string>("ParentFolderName");

                    b.Property<string>("ParentFolderPath");

                    b.HasKey("FilePath");

                    b.ToTable("SubtitleFiles");
                });

            modelBuilder.Entity("SimpleAudioBooksPlayer.DAL.SubtitleFileIndex", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MusicFilePath");

                    b.Property<string>("SubtitleFilePath");

                    b.HasKey("Index");

                    b.ToTable("SubtitleFileIndexes");
                });
#pragma warning restore 612, 618
        }
    }
}
